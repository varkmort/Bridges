#pragma once

#ifndef GAME_HPP
#define GAME_HPP

//===========================
//библиотеки stl которые вам могу быть нужны
#include <vector>

//===========================
#include "Toy.hpp"
#include "Frame.hpp"

class Game {
public:
	Game();

	virtual ~Game() = default;

	void TakeToys();
	void ShowToys();
	void PlaceToys();

	void StartGame();

private:
	//=================================
	// пачка приватных методов которые будут нам игру играть
	//=================================


	std::vector<Frame>	frames_;
	std::vector<Toy>	bucket_;
	std::vector<Toy>	hand_;

};


#endif // !GAME_HPP
//ѕравила игры:
// ¬ ведЄрке при содании есть некоторое количество 
// игрушек(хран€тс€ в коллекции)
// ” ведЄрка при создании должно быть некоторое количество рамок 
// дл€ продевани€ игрушек(тоже можно в коллекцию засунуть)
// игрок может видеть что он вз€л из ведЄрка
// игрок может попробовать засунуть в какую нибудь рамку игрушку из руки
// если рамка не позвол€ет продеть игрушку то она остаЄтс€ у игрока
// 
// «адание.
//	нельз€ трогать Bridges.cpp
//  нужно реализовать в классе Game функционал игры.
//  ѕри необходимости вы можете созавать дополнительные классы или выносить 
//  алгоритмы в вспомогательные методы
//

